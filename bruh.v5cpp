#pragma region VEXcode Generated Robot Configuration
// Make sure all required headers are included.
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>
#include <string.h>

#include "vex.h"

using namespace vex;

// Brain should be defined by default
brain Brain;

// Define motors for the drivetrain
motor leftMotor(PORT1, gearSetting::ratio18_1, false); // Adjust port and reverse flag as needed
motor rightMotor(PORT2, gearSetting::ratio18_1, true); // Adjust port and reverse flag as needed
motor beltMotor(PORT3, gearSetting::ratio18_1, false); // Adjust port as needed
controller Controller1(controllerType::primary);

// START V5 MACROS
#define waitUntil(condition)                                                   \
  do {                                                                         \
    wait(5, msec);                                                             \
  } while (!(condition))

#define repeat(iterations)                                                     \
  for (int iterator = 0; iterator < iterations; iterator++)
// END V5 MACROS

// Robot configuration code.

// generating and setting random seed
void initializeRandomSeed(){
  int systemTime = Brain.Timer.systemHighResolution();
  double batteryCurrent = Brain.Battery.current();
  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);

  // Combine these values into a single integer
  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;

  // Set the seed
  srand(seed);
}

void vexcodeInit() {
  //Initializing random seed.
  initializeRandomSeed(); 
}

// Helper to make playing sounds from the V5 in VEXcode easier and
// keeps the code cleaner by making it clear what is happening.
void playVexcodeSound(const char *soundName) {
  printf("VEXPlaySound:%s\n", soundName);
  wait(5, msec);
}

#pragma endregion VEXcode Generated Robot Configuration

/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       {author}                                                  */
/*    Created:      {date}                                                    */
/*    Description:  V5 project                                                */
/*                                                                            */
/*----------------------------------------------------------------------------*/

// Include the V5 Library
#include "vex.h"
  
// Allows for easier use of the VEX Library
using namespace vex;

int main() {
  // Initializing Robot Configuration. DO NOT REMOVE!
  vexcodeInit();

  // Main control loop
  while (true) {
    // Get joystick values
    int forwardSpeed = Controller1.Axis3.position(percentUnits::pct); // Left joystick vertical
    int turnSpeed = Controller1.Axis1.position(percentUnits::pct); // Left joystick horizontal

    // Calculate motor speeds
    int leftSpeed = forwardSpeed + turnSpeed;
    int rightSpeed = forwardSpeed - turnSpeed;

    // Set motor speeds
    leftMotor.spin(directionType::fwd, leftSpeed, velocityUnits::pct);
    rightMotor.spin(directionType::fwd, rightSpeed, velocityUnits::pct);

    // Control beltMotor
    if (Controller1.ButtonR1.pressing()) {
      beltMotor.spin(directionType::fwd, 30, velocityUnits::pct);
    } 
    else if (Controller1.ButtonL1.pressing()) {
      beltMotor.spin(directionType::rev, 30, velocityUnits::pct);
    }   
    else if (Controller1.ButtonL2.pressing()) {
      beltMotor.spin(directionType::rev, 100, velocityUnits::pct);
    } 
    else {
      beltMotor.stop(brakeType::hold);
    }

    // Prevent CPU hogging
    wait(20, msec);
  }
}
