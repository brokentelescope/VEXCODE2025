{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n// Define motors for the drivetrain\nmotor leftMotor(PORT1, gearSetting::ratio18_1, false); // Adjust port and reverse flag as needed\nmotor rightMotor(PORT2, gearSetting::ratio18_1, true); // Adjust port and reverse flag as needed\nmotor beltMotor(PORT3, gearSetting::ratio18_1, false); // Adjust port as needed\ncontroller Controller1(controllerType::primary);\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n// Robot configuration code.\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\nvoid vexcodeInit() {\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // Main control loop\n  while (true) {\n    // Get joystick values\n    int forwardSpeed = Controller1.Axis3.position(percentUnits::pct); // Left joystick vertical\n    int turnSpeed = Controller1.Axis1.position(percentUnits::pct); // Left joystick horizontal\n\n    // Calculate motor speeds\n    int leftSpeed = forwardSpeed + turnSpeed;\n    int rightSpeed = forwardSpeed - turnSpeed;\n\n    // Set motor speeds\n    leftMotor.spin(directionType::fwd, leftSpeed, velocityUnits::pct);\n    rightMotor.spin(directionType::fwd, rightSpeed, velocityUnits::pct);\n\n    // Control beltMotor\n    if (Controller1.ButtonR1.pressing()) {\n      beltMotor.spin(directionType::fwd, 30, velocityUnits::pct);\n    } \n    else if (Controller1.ButtonL1.pressing()) {\n      beltMotor.spin(directionType::rev, 30, velocityUnits::pct);\n    }   \n    else if (Controller1.ButtonL2.pressing()) {\n      beltMotor.spin(directionType::rev, 100, velocityUnits::pct);\n    } \n    else {\n      beltMotor.stop(brakeType::hold);\n    }\n\n    // Prevent CPU hogging\n    wait(20, msec);\n  }\n}\n","textLanguage":"cpp","robotConfig":[],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}